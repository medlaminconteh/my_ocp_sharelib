@Library('my_ocp_sharelib') _  
import com.aviro.OpenShiftHelper  

pipeline {
    //agent any  
    agent {
        label 'buildertwo'
    }
// oc login --token=sha256~xfssLZYgN179VUO7eaC1iJ1MfoUzd8LkG8F8c91IFKE --server=https://api.rm1.0a51.p1.openshiftapps.com:6443
    environment {
        OC_TOKEN = credentials('openshift_id')  // Jenkins credentials
        OC_SERVER = "https://api.rm1.0a51.p1.openshiftapps.com:6443"
        PROJECT = "lamr8-dev"
        IMAGE_NAME = "medlamin13956814/exercise:latest"
        APP_NAME = "web-terminal-tooling"
        APP_DEPLOYMENT = "workspace95ad191bab5b46c3"
    }

    stages {
        stage('Login to OpenShift') {
            steps {
                script {
                    OpenShiftHelper.login(this, OC_TOKEN, OC_SERVER)
                }
            }
        }


          stage('Trivy Security Scan') {
            steps {
                sh '''
                sudo docker run --rm \
                -v /var/run/docker.sock:/var/run/docker.sock \
                -v $PWD:/root/reports \
                aquasec/trivy image \
                --format template \
                --template "@/contrib/html.tpl" \
                -o /root/reports/trivy-report.html \
                ${IMAGE_NAME}
                '''
            }
        }

        stage('Publish Trivy Report') {
            steps {
                publishHTML(target: [
                allowMissing: true,
                alwaysLinkToLastBuild: false,
                keepAll: true,
                reportDir: '.',
                reportFiles: 'trivy-report.html',
                reportName: 'Trivy Security Report',
                alwaysLinkToLastBuild: true
                ])
            }
        }


        // stage('Deploy Application') {
        //     steps {
        //         script {
        //             OpenShiftHelper.deploy(this, PROJECT, IMAGE, APP_NAME)
        //         }
        //     }
        // }

        stage('Deploy Application') {
            steps {
                script {
                    //OpenShiftHelper.deployDeployment(this, PROJECT, IMAGE_NAME, APP_NAME, APP_DEPLOYMENT)
                    sh "oc project ${project}"
                    sh "oc new-app ${IMAGE_NAME} -name=${APP_NAME} --namespace=${PROJECT}"

                }
            }
        }

        stage('Check Deployment Status') {
            steps {
                script {
                    if (!OpenShiftHelper.checkDeployment(this, PROJECT, APP_NAME, APP_DEPLOYMENT)) {
                        error "Le déploiement a échoué !"
                    } else {
                        echo "L'application a été déployée avec succès sur OpenShifTt !"
                    }
                }
            }
        }
    }
}
